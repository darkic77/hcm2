023cb499-2d56-49d9-87ad-88c9bb2ac4cf.29dc4503-4daa-4b72-8552-55f5a463c0cb.description=<pre>Establece Informaci\u00F3n sobre cuenta de usuario\n\nEntradas\:\nhost - el controlador de dominio al que conectarse.\nusername - el nombre de usuario de Windows con el que conectarse a Active Directory\npassword - contrase\u00F1a del nombre de usuario\nOU - la unidad organizativa en la que est\u00E1 el usuario que debe ser deshabilitado (por ej. OU\=EMEAOU)\nuserCommonName - El CN del usuario (es decir, John Smith)\nlogonName - cambia el nombre de inicio de sesi\u00F3n del usuario\nsAMAccountName - nombre sAMAccount de usuario\nmustChangePassword - debe cambiar la opci\u00F3n de contrase\u00F1a\ncantChangePassword - no puede cambiar la opci\u00F3n de contrase\u00F1a. Las entradas v\u00E1lidas son\: true, false\npasswordNeverExpires - opci\u00F3n contrase\u00F1a nunca caduca. Las entradas v\u00E1lidas son\: true, false\nuseReversibleEncryption - usar opci\u00F3n de cifrado reversible. Las entradas v\u00E1lidas son\: true, false\naccountDisabled - opci\u00F3n cuenta deshabilitada. Las entradas v\u00E1lidas son\: true, false\nsmartcardRequired - se necesita tarjeta inteligente para el inicio de sesi\u00F3n interactivo. Las entradas v\u00E1lidas son\: true, false\nnotDelegated - la cuenta no puede delegarse. Las entradas v\u00E1lidas son\: true, false\nuseDESEncryption - usar tipos de cifrado DES para esta cuenta. Las entradas v\u00E1lidas son\: true, false\ndoNotRequireKerberos - no requiere autenticaci\u00F3n Kerberos. Las entradas v\u00E1lidas son\: true, false\naccountExpires - fecha de caducidad de cuenta. Usar 'never' para que la cuenta nunca caduque\n\nRespuestas\:\nsuccess - la operaci\u00F3n finaliz\u00F3 correctamente.\nfailure - algo sali\u00F3 mal durante la ejecuci\u00F3n\n\nResultados\:\nEl c\u00F3digo de devoluci\u00F3n de la operaci\u00F3n.\n\nResultados adicionales\:\nreturnResult - el resultado sin procesar de la operaci\u00F3n\nsessionId - el Id. de sesi\u00F3n de la conexi\u00F3n al host\nexception - Si se ha producido un error, el mensaje de este error\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.3113490e-b196-4bdf-bc73-7a046e268b65.description=<pre>\nCreates a new user in Active Directory.\n\nInputs\:\n    host - Domain controller.\n    OU - The OU (Organization Unit) or CN (Common Name) to add the user to.\nExample\: CN\=Users.\n    userFullName - Full name of user.\nExamples\: Bob Smith.\n    userPassword - Password for user. (Should respect the password restrictions imposed by AD)\n    sAMAccountName -  New user sAMAAccount name. This is the user logon name (pre-Windows 2000).\nExamples\: bsmith. \nThe complete user account name will look like this "DOMAINNAME\\bsmith".\n    altuser -  Username used to login on domain controller.\n    altpass - Password for altuser.\n    escapeChars - Add this input and set the value to 'true' if you want the operation to escape the special AD characters.\n\nResponses\:\n    success - Operation created new user in AD.\n    failure - Operation failed to create the user.\n\nResults\:\n    Operation return code.\n\nExtra Results\:\n    userDN - The distinguished name of the newly created user ('userFullName' input).\n\nNotes\:\n1. If the inputs contain special characters make sure you enter these inputs either with no special character escaped and set escapeChars to true, either with all the special characters escaped. The special AD characters are '\#','\=','"','<','>',',','+',';','\\','"''.\n2. If sAMAccountName input contains special characters these will be replaced with the "_" character. The following characters are considered special regarding sAMAccountName\: '"','\\','/','[',']','\:',';','|','\=',',','+','*','?','<','>'.\n\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.51b64d40-b461-40c6-ae50-5b6c20b78f5a.prompt=From\:
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.5ba4052c-7933-44f2-a92d-b548558e6379.prompt=Port\:
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.86ac1a61-63b2-406f-9213-a46a43b1dcb1.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.874389b5-285e-406d-87a4-7ea5c9568a36.prompt=To\:
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.8e10dda4-0ef3-4b2d-aec8-f6865be96e19.description=<pre>Sets User Organization Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\ntitle - user title\ndepartment\t- name of the department\ncompany - name of the company\nmanagerDN - manager distinguished name (i.e. CN\=John Smith,OU\=EMEAOU,DC\=domain,DC\=com)\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.9c0ed285-7c81-4d32-a3e1-5d336fc3263b.prompt=Host name\:
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.9d6f3218-d708-4744-a27f-cbb12344fa2c.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.a1d00b56-2f61-4385-85b0-c2093fe3cb8f.prompt=Port\:
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.a44a548c-19e2-4202-83dc-eb7b6a8d1529.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.b07df16c-566d-4698-8a32-5d16c40c4f46.description=<pre>Sets User Address Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\nstreet - user street\npOBox - user P.O. box\ncity - city of the user\nstateOrProvince - state or province option\nzipOrPostalCode - zip or postal code\ncountryOrRegion - country or region. The format for this input should be countryName,countryAbbreviation,countryCode. countryName sets the value for the "co" property, countryAbbreviation sets the "c" property using the two-letter country code, countryCode sets the "countryCode" property using the numeric value of the country.\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n\nNote\:\nMake sure that the values supplied to the countryOrRegion input ar valid, as only the format of this input is checked for correctness and not the values themselves. The valid country names, two-letter country codes and three-digit numeric codes are the ones defined by the  ISO 3166 standard.\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.c6881f75-582f-43d8-9d16-d9c90b6e5979.description=<pre>Set general information for an Active Directory user.\n\nInput Parameters\:\nhost - domain controller\nOU - the Organizational Unit DN or Common Name DN the user is in (i.e. OU\=EMEAOU)\nuserCommonName - the CN, generally the full name of user (i.e. Bob Smith)\nuserPassword - password for user (must be at least 5 characters long)\nusername - user to connect to AD as\npassword - password to connect to AD as\ndelimiter - delimiter used to split the otherTelephoneNr and otherWebPages inputs\n\nThe folowing inputs are the information that can be set. Inputs with empty value will not alter the already existing information.\nfirstName - user first name to change\ninitials - user initials of the user to change\nlastName - user last name to change\ndisplayName - user display name to change\ndescription - user description to change\noffice - user office description to change\ntelephoneNr - user telephone number to change\notherTelephoneNrs - other telephone numbers\nemail - user email to change\nwebPage - user webpage to change\notherWebPages - other webpages for the user\n\nResponses\:\nsuccess - operation was able to set the user's properties\nfailure - the user's properties could not be set because of invalid property value(s) or because an error occurred\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.d92d8362-6596-433c-b010-364f9d8c60f7.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
023cb499-2d56-49d9-87ad-88c9bb2ac4cf.e9d3aeae-089f-42dc-97c1-75f2e780f432.prompt=From\:
03489a52-2701-4131-a3de-99dfef7ce713.4f731aa4-f089-4573-95e4-cb265bdae596.description=<pre>\nThis flow executes Powershell scripts on a given host.\n\nInputs\:\nhost - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\nDefault value\: localhost\nURI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session. \nValue format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\nExample\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\nshellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\nExample\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\nusername - The username to use when connecting to the server.\nValue format\: username@domain or domain\\\\username.\npassword - The password to use when connecting to the server.\nauthType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Basic, Credssp, Digest, Kerberos, Negotiate, NegotiateWithImplicitCredential. (case-insensitive)\nDefault value\: Default\nconfigurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\nconnectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\nDefault value\:180000 (3 minutes).\nscriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\nuseSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\nDefault value\: false\nskipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\nDefault value\: true\nskipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\nDefault value\: true\nport - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\nkeepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\nDefault value\: false\nenablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\nDefault value\: false\nExample\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\nrunspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\nmodules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\nExample\: FailoverClusters\nsnapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\nExample\: Microsoft.Exchange.Management.PowerShell.E2010\nscript - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\nExample\:c\:\\PowerShellScripts\\GetHost.ps1\ncmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\nreturnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\nDefault value\: false\ndelimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\ncolDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ",".\nrowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline.\n\nResponses\:\nSuccess - The Powershell script or cmdlet was executed successfully.\nFailure - Something went wrong.\n\nReturns\:\nreturnResult - The result of the script execution formatted as table or string depending on the returnTable input value as described above.\nscript - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host. Please note that the operation adds "Out-String" command to the end of your script if returnTable input  is set to false. \nobjectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\nwarnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\nrunspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n</pre>
03489a52-2701-4131-a3de-99dfef7ce713.description=<pre>\nGet-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    AuthType -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Filter -   Is mandatory\: true.\n    Identity -   Is mandatory\: true.\n    LDAPFilter -   Is mandatory\: true.\n    Partition -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    Properties -   Is mandatory\: false.\n    ResultPageSize -   Is mandatory\: false.\n    ResultSetSize -   Is mandatory\: false.\n    SearchBase -   Is mandatory\: false.\n    SearchScope -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
035dedce-ac68-467b-ae40-3030f4e32751.24b85b4b-847a-41d8-adc2-1f0bc7fb7951.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.10946237-b99f-45ed-8d65-d890918206cc.prompt=To\:
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.1256d123-8595-4d73-a941-79c64ae9786b.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.1f028bbe-43f3-4fb5-a851-cc93645b02ff.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.3f2d3d9b-6901-4797-9e99-d8d0ca1ca785.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.6d683bfb-69ce-447b-8482-a149344e68bf.prompt=From\:
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.7f63067e-2d48-41a9-9a89-b2b2a9ba97fb.prompt=From\:
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.aaededff-b030-474e-af01-aa24601645b4.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.bac9be67-c453-4a43-98d0-265ff95829fb.prompt=To\:
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.bdb2ad22-a14f-44de-a4b2-cbbeb34c11e6.description=<pre>\nResets a users password in Active Directory.\n\nInputs\:\nhost - hostname or IP Address of AD Server\nsAMAccountName - the account to reset\nuserPassword - the new password\nusername - account with admin privlidges or reset password priv in domain\npassword - password to admin account\n\nResponeses\:\nsuccess - password has been reset\nfailure - failed to reset password\n</pre>\n
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.c06b7aee-5bfd-458e-bdd4-b98cec4d4630.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
07375cd7-0b6f-4b66-a14a-84b2fe5a80ea.fe9a2548-9d18-4d70-852e-4da0736ce62c.description=<pre>\nAuthenticates a user against Active Directory.\n\nInputs\:\nhost - The hostname or IP address of the AD server.\nusername - The user's windows username (Examples\: username@domain.com or domain\\username).\npassword - The user's password.\n\nResponses\:\nsuccess - User authenticated against AD.\nfailure - User could not be authenticated.\n</pre>\n
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.098ded56-aae5-4539-b46e-6e04580d3d48.prompt=Enter a value for sAMAccountName
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.0c0662f1-eb5c-47d6-af5f-c0571d41afb7.prompt=To\:
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.2863bd1a-177f-4855-8c2c-faa5fb38134d.prompt=From\:
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.34535abf-e56f-447f-bc14-119a6a38c49d.description=<pre>\nResets a users password in Active Directory.\n\nInputs\:\nhost - hostname or IP Address of AD Server\nsAMAccountName - the account to reset\nuserPassword - the new password\nusername - account with admin privlidges or reset password priv in domain\npassword - password to admin account\n\nResponeses\:\nsuccess - password has been reset\nfailure - failed to reset password\n</pre>\n
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.380e3d83-9d17-4672-87f1-56f865899895.prompt=Host name\:
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.68c15060-80ae-46c4-a223-6d55c507d815.description=<pre>\nAuthenticates a user against Active Directory.\n\nInputs\:\nhost - The hostname or IP address of the AD server.\nusername - The user's windows username (Examples\: username@domain.com or domain\\username).\npassword - The user's password.\n\nResponses\:\nsuccess - User authenticated against AD.\nfailure - User could not be authenticated.\n</pre>\n
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.829a7efc-e943-487c-b9f5-5d7070688373.prompt=Enter a value for username
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.8d6dbb72-3a07-4525-a8bc-ee5bc7bd7030.prompt=Enter a value for host
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.ae68fa93-bcaa-4e12-9679-fc12ab9dee44.prompt=Port\:
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.baeb2524-458c-4d1b-ba97-a914d30805e3.prompt=Enter a value for password
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.ca99139f-77ed-418a-8720-6265f704704b.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.e8872491-879f-4bc1-b88f-d1636b67819c.prompt=Enter a value for userPassword
134c24ec-cdfe-4033-970c-3d8bb3dbb55c.ed79e6cd-cc66-47a0-aa29-38387013f38e.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.042dc310-71c3-4d64-a36a-9a747c04bdb8.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.071169b7-4b8c-49fe-985b-af29c5116a2e.prompt=From\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.21151893-b953-4ee5-8730-24a2e55c4fa9.prompt=To\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.30105c64-3b62-4220-b83b-a681dae0e442.description=<pre>Sets User Account Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\nlogonName - change the user logon name\nsAMAccountName - user sAMAccount name\nmustChangePassword - must change password option\ncantChangePassword - cannot change password option. Valid inputs are\: true, false\npasswordNeverExpires - password never expires option. Valid inputs are\: true, false\nuseReversibleEncryption - use reversible encryption option. Valid inputs are\: true, false\naccountDisabled - account disabled option. Valid inpute are\: true, false\nsmartcardRequired - smartcard is requred for interactive logon. Valid inpute are\: true, false\nnotDelegated - account is sensitive and cannot be delegated. Valid inpute are\: true, false\nuseDESEncryption - use DES encryption types for this account. Valid inpute are\: true, false\ndoNotRequireKerberos - do not require Kerberos authentication. Valid inpute are\: true, false\naccountExpires - account expiration date. Use 'never' for account never expires\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.338f044f-4967-40ab-9864-2a88885f0725.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.36d99c23-4ef1-4678-b37b-30f4533d21dc.prompt=To\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.3ed5b22c-d467-4948-ba8c-2813ccef6480.prompt=Port\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.4f318465-367e-4a11-ba2d-6b5d2ae55408.prompt=Port\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.4fa0bacf-6163-4b36-8092-def1c9c0c58a.prompt=Port\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.53b75292-3447-4410-9195-e404776a2982.description=<pre>Set general information for an Active Directory user.\n\nInput Parameters\:\nhost - domain controller\nOU - the Organizational Unit DN or Common Name DN the user is in (i.e. OU\=EMEAOU)\nuserCommonName - the CN, generally the full name of user (i.e. Bob Smith)\nuserPassword - password for user (must be at least 5 characters long)\nusername - user to connect to AD as\npassword - password to connect to AD as\ndelimiter - delimiter used to split the otherTelephoneNr and otherWebPages inputs\n\nThe folowing inputs are the information that can be set. Inputs with empty value will not alter the already existing information.\nfirstName - user first name to change\ninitials - user initials of the user to change\nlastName - user last name to change\ndisplayName - user display name to change\ndescription - user description to change\noffice - user office description to change\ntelephoneNr - user telephone number to change\notherTelephoneNrs - other telephone numbers\nemail - user email to change\nwebPage - user webpage to change\notherWebPages - other webpages for the user\n\nResponses\:\nsuccess - operation was able to set the user's properties\nfailure - the user's properties could not be set because of invalid property value(s) or because an error occurred\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.614974f3-548c-4d23-9878-d4267e545f97.description=<pre>Sets User Address Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\nstreet - user street\npOBox - user P.O. box\ncity - city of the user\nstateOrProvince - state or province option\nzipOrPostalCode - zip or postal code\ncountryOrRegion - country or region. The format for this input should be countryName,countryAbbreviation,countryCode. countryName sets the value for the "co" property, countryAbbreviation sets the "c" property using the two-letter country code, countryCode sets the "countryCode" property using the numeric value of the country.\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n\nNote\:\nMake sure that the values supplied to the countryOrRegion input ar valid, as only the format of this input is checked for correctness and not the values themselves. The valid country names, two-letter country codes and three-digit numeric codes are the ones defined by the  ISO 3166 standard.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.761cf6f5-c566-40a6-b290-de4b0a631205.description=<pre>\nNew-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    AuthType -   Is mandatory\: false.\n    City -   Is mandatory\: false.\n    Country -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Description -   Is mandatory\: false.\n    DisplayName -   Is mandatory\: false.\n    Instance -   Is mandatory\: false.\n    ManagedBy -   Is mandatory\: false.\n    Name -   Is mandatory\: true.\n    OtherAttributes -   Is mandatory\: false.\n    PassThru -   Is mandatory\: false.\n    Path -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    PostalCode -   Is mandatory\: false.\n    ProtectedFromAccidentalDeletion -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n    State -   Is mandatory\: false.\n    StreetAddress -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.8383373b-db33-4d1d-a02d-d85940f74859.prompt=Host name\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.84542e7d-ff76-4a5f-8aa4-256eaf22a5d1.prompt=To\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.8aee4715-4a1f-43f1-a5f6-acf45a4ecca7.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.8b7665f4-10dc-47f9-9137-c8cd008e6f5a.description=<pre>\nCreates a new user in Active Directory.\n\nInputs\:\n    host - Domain controller.\n    OU - The OU (Organization Unit) or CN (Common Name) to add the user to.\nExample\: CN\=Users.\n    userFullName - Full name of user.\nExamples\: Bob Smith.\n    userPassword - Password for user. (Should respect the password restrictions imposed by AD)\n    sAMAccountName -  New user sAMAAccount name. This is the user logon name (pre-Windows 2000).\nExamples\: bsmith. \nThe complete user account name will look like this "DOMAINNAME\\bsmith".\n    altuser -  Username used to login on domain controller.\n    altpass - Password for altuser.\n    escapeChars - Add this input and set the value to 'true' if you want the operation to escape the special AD characters.\n\nResponses\:\n    success - Operation created new user in AD.\n    failure - Operation failed to create the user.\n\nResults\:\n    Operation return code.\n\nExtra Results\:\n    userDN - The distinguished name of the newly created user ('userFullName' input).\n\nNotes\:\n1. If the inputs contain special characters make sure you enter these inputs either with no special character escaped and set escapeChars to true, either with all the special characters escaped. The special AD characters are '\#','\=','"','<','>',',','+',';','\\','"''.\n2. If sAMAccountName input contains special characters these will be replaced with the "_" character. The following characters are considered special regarding sAMAccountName\: '"','\\','/','[',']','\:',';','|','\=',',','+','*','?','<','>'.\n\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.8df93b77-7ce1-49c4-afd9-68feee64fb6c.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.a075046f-a694-4e31-b688-ccef2a731188.prompt=From\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.b08a4215-1837-4de7-9c0d-c6fb1bc9005e.prompt=From\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.bd79278c-49db-45a5-8304-30abc3ec2466.prompt=Host name\:
2d8d378c-c53e-4344-ae10-2fbfbb36d637.c6c0063f-5a63-4313-b29f-f787fa39e2d6.description=<pre>\nNew-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    AuthType -   Is mandatory\: false.\n    City -   Is mandatory\: false.\n    Country -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Description -   Is mandatory\: false.\n    DisplayName -   Is mandatory\: false.\n    Instance -   Is mandatory\: false.\n    ManagedBy -   Is mandatory\: false.\n    Name -   Is mandatory\: true.\n    OtherAttributes -   Is mandatory\: false.\n    PassThru -   Is mandatory\: false.\n    Path -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    PostalCode -   Is mandatory\: false.\n    ProtectedFromAccidentalDeletion -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n    State -   Is mandatory\: false.\n    StreetAddress -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.cc36cf08-d2b8-481d-8af4-2d7634e22290.description=<pre>Sets User Organization Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\ntitle - user title\ndepartment\t- name of the department\ncompany - name of the company\nmanagerDN - manager distinguished name (i.e. CN\=John Smith,OU\=EMEAOU,DC\=domain,DC\=com)\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
2d8d378c-c53e-4344-ae10-2fbfbb36d637.f1eb335e-9384-43d7-9052-53a2a39d9bee.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
2d8dfaa5-1d20-412b-8470-9ff8525ba237.1882e506-d401-4712-bac5-29d27d983c34.description=<pre>\nThis flow executes Powershell scripts on a given host.\n\nInputs\:\nhost - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\nDefault value\: localhost\nURI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session. \nValue format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\nExample\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\nshellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\nExample\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\nusername - The username to use when connecting to the server.\nValue format\: username@domain or domain\\\\username.\npassword - The password to use when connecting to the server.\nauthType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Basic, Credssp, Digest, Kerberos, Negotiate, NegotiateWithImplicitCredential. (case-insensitive)\nDefault value\: Default\nconfigurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\nconnectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\nDefault value\:180000 (3 minutes).\nscriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\nuseSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\nDefault value\: false\nskipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\nDefault value\: true\nskipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\nDefault value\: true\nport - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\nkeepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\nDefault value\: false\nenablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\nDefault value\: false\nExample\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\nrunspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\nmodules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\nExample\: FailoverClusters\nsnapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\nExample\: Microsoft.Exchange.Management.PowerShell.E2010\nscript - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\nExample\:c\:\\PowerShellScripts\\GetHost.ps1\ncmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\nreturnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\nDefault value\: false\ndelimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\ncolDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ",".\nrowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline.\n\nResponses\:\nSuccess - The Powershell script or cmdlet was executed successfully.\nFailure - Something went wrong.\n\nReturns\:\nreturnResult - The result of the script execution formatted as table or string depending on the returnTable input value as described above.\nscript - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host. Please note that the operation adds "Out-String" command to the end of your script if returnTable input  is set to false. \nobjectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\nwarnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\nrunspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n</pre>
2d8dfaa5-1d20-412b-8470-9ff8525ba237.description=<pre>\nNew-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    AuthType -   Is mandatory\: false.\n    City -   Is mandatory\: false.\n    Country -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Description -   Is mandatory\: false.\n    DisplayName -   Is mandatory\: false.\n    Instance -   Is mandatory\: false.\n    ManagedBy -   Is mandatory\: false.\n    Name -   Is mandatory\: true.\n    OtherAttributes -   Is mandatory\: false.\n    PassThru -   Is mandatory\: false.\n    Path -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    PostalCode -   Is mandatory\: false.\n    ProtectedFromAccidentalDeletion -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n    State -   Is mandatory\: false.\n    StreetAddress -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.15f4f1e5-ff72-4c3a-851c-b9fa98e0c8d0.description=<pre>\nResets a users password in Active Directory.\n\nInputs\:\nhost - hostname or IP Address of AD Server\nsAMAccountName - the account to reset\nuserPassword - the new password\nusername - account with admin privlidges or reset password priv in domain\npassword - password to admin account\n\nResponeses\:\nsuccess - password has been reset\nfailure - failed to reset password\n</pre>\n
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.1d8aab4f-2178-47f3-ab71-beb4c438fae8.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.200ebd00-9720-4d09-b3ae-0516385f9f5f.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.720326dc-df57-4535-afa3-13edb8650816.prompt=Enter a value for sAMAccountName
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.82f83e0d-24b6-4de4-a583-44f50cccca9d.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.dbf0e373-b656-4849-9a6e-e7ac92aa919a.description=<pre>Genera un n\u00FAmero aleatorio.\n\nEntradas\:\nmax - El n\u00FAmero m\u00E1ximo que se puede devolver.\nmin - El n\u00FAmero m\u00EDnimo que se puede devolver.\n\nRespuestas\:\nsuccess - La operaci\u00F3n finaliz\u00F3 correctamente.\nfailure - Algo sali\u00F3 mal.\n\nDevuelve\:\nUn n\u00FAmero aleatorio entre el m\u00E1ximo y el m\u00EDnimo (inclusive)</pre>
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.f2a5413d-c4b2-4ab8-a399-393d84339e50.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
587ca9a8-f2a6-45a3-b76b-9c2bb28236f0.ffe1b0f2-da1d-430a-99ed-3f1f587d9611.description=<pre>Searches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - name or IP address of LDAP server to query. Can also be used in the form " host\:port"\nDN - base DN for search\nfilter - search filter (see Note section)\npropertyName - name of the property to return (ex. distinguishedName)\nusername - name of user to connect to LDAP as\npassword - password of user\nport - specify the port in case it is not the default one, or it is not specified in the host path\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\n\nResponses\:\nobject(s) retrieved - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nno objects found - no objects were found\nfailure - an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local\n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
68e8cb07-cc10-49ce-8fd2-f1ff20743597.5e5e466e-67bc-4773-b815-3a9736eb693e.description=<pre>\nHabilita una cuenta de usuario en Active Directory.\n\nEntradas\:\n    host - El controlador de dominio al que conectarse.\n    username - el nombre de usuario de Windows con el que conectarse a Active Directory.\n    password - La contrase\u00F1a para conectar a Active Directory, para este nombre de usuario.\n    OU - La unidad organizativa (OU) o nombre com\u00FAn (CN) de que forma parte el usuario.\nEjemplo\: CN\=Users.\n    userFullName - El nombre com\u00FAn del usuario que se debe habilitar.\nEjemplo\: testUser1\n\nResultados\:\n    returnCode - El c\u00F3digo de salida de la operaci\u00F3n.\n\nRespuestas\:\n    success - El usuario se ha habilitado correctamente.\n    failure - El usuario no se habilit\u00F3, algo ha salido mal.\n</pre>
83dcd895-0e5a-446d-928e-34003e07ae72.832b3d0b-07a6-424a-9eab-9106ecbbcedc.description=<pre>\nThis flow executes Powershell scripts on a given host.\n\nInputs\:\nhost - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\nDefault value\: localhost\nURI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session. \nValue format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\nExample\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\nshellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\nExample\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\nusername - The username to use when connecting to the server.\nValue format\: username@domain or domain\\\\username.\npassword - The password to use when connecting to the server.\nauthType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Basic, Credssp, Digest, Kerberos, Negotiate, NegotiateWithImplicitCredential. (case-insensitive)\nDefault value\: Default\nconfigurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\nconnectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\nDefault value\:180000 (3 minutes).\nscriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\nuseSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\nDefault value\: false\nskipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\nDefault value\: true\nskipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\nDefault value\: true\nport - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\nkeepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\nDefault value\: false\nenablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\nDefault value\: false\nExample\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\nrunspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\nmodules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\nExample\: FailoverClusters\nsnapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\nExample\: Microsoft.Exchange.Management.PowerShell.E2010\nscript - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\nExample\:c\:\\PowerShellScripts\\GetHost.ps1\ncmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\nreturnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\nDefault value\: false\ndelimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\ncolDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ",".\nrowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline.\n\nResponses\:\nSuccess - The Powershell script or cmdlet was executed successfully.\nFailure - Something went wrong.\n\nReturns\:\nreturnResult - The result of the script execution formatted as table or string depending on the returnTable input value as described above.\nscript - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host. Please note that the operation adds "Out-String" command to the end of your script if returnTable input  is set to false. \nobjectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\nwarnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\nrunspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n</pre>
83dcd895-0e5a-446d-928e-34003e07ae72.description=<pre>\nSet-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    Add -   Is mandatory\: false.\n    AuthType -   Is mandatory\: false.\n    City -   Is mandatory\: false.\n    Clear -   Is mandatory\: false.\n    Country -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Description -   Is mandatory\: false.\n    DisplayName -   Is mandatory\: false.\n    Identity -   Is mandatory\: true.\n    Instance -   Is mandatory\: true.\n    ManagedBy -   Is mandatory\: false.\n    Partition -   Is mandatory\: false.\n    PassThru -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    PostalCode -   Is mandatory\: false.\n    ProtectedFromAccidentalDeletion -   Is mandatory\: false.\n    Remove -   Is mandatory\: false.\n    Replace -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n    State -   Is mandatory\: false.\n    StreetAddress -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
8f4f9f81-f973-4663-8afa-f4205654a1b0.0558d669-a0a4-4141-938f-79d7ce5bbf95.prompt=To\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.0dfe9cfe-2828-414a-9617-4f9adf9dee35.prompt=Port\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.1c9e4ef2-3687-4f54-bd68-d5b047cf7a8d.prompt=Host name\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.1f7733d7-bbbc-4a2f-82b5-cabeaebff5e2.description=<pre>\nResets a users password in Active Directory.\n\nInputs\:\nhost - hostname or IP Address of AD Server\nsAMAccountName - the account to reset\nuserPassword - the new password\nusername - account with admin privlidges or reset password priv in domain\npassword - password to admin account\n\nResponeses\:\nsuccess - password has been reset\nfailure - failed to reset password\n</pre>\n
8f4f9f81-f973-4663-8afa-f4205654a1b0.30328a31-ea3f-4cca-b8bd-d13372c740c2.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
8f4f9f81-f973-4663-8afa-f4205654a1b0.54259dfb-2595-4221-bcd2-e45e5ba9d8ab.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
8f4f9f81-f973-4663-8afa-f4205654a1b0.6b0fa2ff-f0f3-4b5e-9992-8a7d4915c73b.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
8f4f9f81-f973-4663-8afa-f4205654a1b0.76974c75-1c46-4640-bd2e-c511f21e7caa.prompt=HostName\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.794e0c3f-29fd-4730-9f31-25b6ef4fdad4.prompt=Port\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.7e88a4c1-5a0a-4a9c-85e3-d49d3cb62b83.prompt=From\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.8b7f127f-4c83-4c89-a37b-9b16cee21414.prompt=Enter a value for host
8f4f9f81-f973-4663-8afa-f4205654a1b0.b1b40e82-bd68-4224-b6cd-c25a35360cc8.prompt=Enter a value for sAMAccountName
8f4f9f81-f973-4663-8afa-f4205654a1b0.bd6ef330-e174-474f-acb2-3b249e14d985.prompt=From\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.c586ce43-8791-4bb2-ac2e-7d349ab5a049.prompt=Host name\:
8f4f9f81-f973-4663-8afa-f4205654a1b0.d1093169-8a4e-4bf2-9310-f10881d37ff9.description=<pre>\nGenerates a random password.\n\nInputs\:\npasswordLength - the required length of the password\nnumberOfNonAlphanumericCharacters - the minimum number of non alphanumeric numbers\n\nResponses\:\nsuccess - password generated\nfailure - failed to generate password\n\nExtra Results\:\npassword - the generated password\n\nNOTE\:\nIf passwordLength or numberOfNonAlphanumericCharacters are less than 0 or if numberOfNonAlphanumericCharacters is greater than passwordLength  the operation will succeed  and will return an empty password.\n</pre>\n
8f4f9f81-f973-4663-8afa-f4205654a1b0.f3f5cffd-a320-46d2-b53c-051202ac89ef.description=<pre>Searches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - name or IP address of LDAP server to query. Can also be used in the form " host\:port"\nDN - base DN for search\nfilter - search filter (see Note section)\npropertyName - name of the property to return (ex. distinguishedName)\nusername - name of user to connect to LDAP as\npassword - password of user\nport - specify the port in case it is not the default one, or it is not specified in the host path\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\n\nResponses\:\nobject(s) retrieved - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nno objects found - no objects were found\nfailure - an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local\n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
Configuration.description=
Configuration\\Categories.description=
Configuration\\Domain\ Terms.description=
Configuration\\Group\ Aliases.description=
Configuration\\Role\ Aliases.description=
Configuration\\Scriptlets.description=
Configuration\\Selection\ Lists.description=
Configuration\\System\ Accounts.description=
Configuration\\System\ Evaluators.description=
Configuration\\System\ Filters.description=
Configuration\\System\ Properties.description=
Library.description=
Library\\Active_Directory.description=
Library\\subflujos.description=
a28d1299-7a82-4d1a-94df-d29c81bd8358.04c020ff-b5ce-4893-8208-8a165db34aa8.description=<pre>Sets User Address Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\nstreet - user street\npOBox - user P.O. box\ncity - city of the user\nstateOrProvince - state or province option\nzipOrPostalCode - zip or postal code\ncountryOrRegion - country or region. The format for this input should be countryName,countryAbbreviation,countryCode. countryName sets the value for the "co" property, countryAbbreviation sets the "c" property using the two-letter country code, countryCode sets the "countryCode" property using the numeric value of the country.\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n\nNote\:\nMake sure that the values supplied to the countryOrRegion input ar valid, as only the format of this input is checked for correctness and not the values themselves. The valid country names, two-letter country codes and three-digit numeric codes are the ones defined by the  ISO 3166 standard.\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.0d0c7c1f-bef2-47c5-bb9f-e3bf6f50043d.description=<pre>Establece Informaci\u00F3n sobre cuenta de usuario\n\nEntradas\:\nhost - el controlador de dominio al que conectarse.\nusername - el nombre de usuario de Windows con el que conectarse a Active Directory\npassword - contrase\u00F1a del nombre de usuario\nOU - la unidad organizativa en la que est\u00E1 el usuario que debe ser deshabilitado (por ej. OU\=EMEAOU)\nuserCommonName - El CN del usuario (es decir, John Smith)\nlogonName - cambia el nombre de inicio de sesi\u00F3n del usuario\nsAMAccountName - nombre sAMAccount de usuario\nmustChangePassword - debe cambiar la opci\u00F3n de contrase\u00F1a\ncantChangePassword - no puede cambiar la opci\u00F3n de contrase\u00F1a. Las entradas v\u00E1lidas son\: true, false\npasswordNeverExpires - opci\u00F3n contrase\u00F1a nunca caduca. Las entradas v\u00E1lidas son\: true, false\nuseReversibleEncryption - usar opci\u00F3n de cifrado reversible. Las entradas v\u00E1lidas son\: true, false\naccountDisabled - opci\u00F3n cuenta deshabilitada. Las entradas v\u00E1lidas son\: true, false\nsmartcardRequired - se necesita tarjeta inteligente para el inicio de sesi\u00F3n interactivo. Las entradas v\u00E1lidas son\: true, false\nnotDelegated - la cuenta no puede delegarse. Las entradas v\u00E1lidas son\: true, false\nuseDESEncryption - usar tipos de cifrado DES para esta cuenta. Las entradas v\u00E1lidas son\: true, false\ndoNotRequireKerberos - no requiere autenticaci\u00F3n Kerberos. Las entradas v\u00E1lidas son\: true, false\naccountExpires - fecha de caducidad de cuenta. Usar 'never' para que la cuenta nunca caduque\n\nRespuestas\:\nsuccess - la operaci\u00F3n finaliz\u00F3 correctamente.\nfailure - algo sali\u00F3 mal durante la ejecuci\u00F3n\n\nResultados\:\nEl c\u00F3digo de devoluci\u00F3n de la operaci\u00F3n.\n\nResultados adicionales\:\nreturnResult - el resultado sin procesar de la operaci\u00F3n\nsessionId - el Id. de sesi\u00F3n de la conexi\u00F3n al host\nexception - Si se ha producido un error, el mensaje de este error\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.191a8a60-cedf-400b-838d-f69cb5bf1a87.prompt=From\:
a28d1299-7a82-4d1a-94df-d29c81bd8358.3073648f-6838-4f43-b0ef-ecd065693507.description=<pre>\nCreates a new user in Active Directory.\n\nInputs\:\n    host - Domain controller.\n    OU - The OU (Organization Unit) or CN (Common Name) to add the user to.\nExample\: CN\=Users.\n    userFullName - Full name of user.\nExamples\: Bob Smith.\n    userPassword - Password for user. (Should respect the password restrictions imposed by AD)\n    sAMAccountName -  New user sAMAAccount name. This is the user logon name (pre-Windows 2000).\nExamples\: bsmith. \nThe complete user account name will look like this "DOMAINNAME\\bsmith".\n    altuser -  Username used to login on domain controller.\n    altpass - Password for altuser.\n    escapeChars - Add this input and set the value to 'true' if you want the operation to escape the special AD characters.\n\nResponses\:\n    success - Operation created new user in AD.\n    failure - Operation failed to create the user.\n\nResults\:\n    Operation return code.\n\nExtra Results\:\n    userDN - The distinguished name of the newly created user ('userFullName' input).\n\nNotes\:\n1. If the inputs contain special characters make sure you enter these inputs either with no special character escaped and set escapeChars to true, either with all the special characters escaped. The special AD characters are '\#','\=','"','<','>',',','+',';','\\','"''.\n2. If sAMAccountName input contains special characters these will be replaced with the "_" character. The following characters are considered special regarding sAMAccountName\: '"','\\','/','[',']','\:',';','|','\=',',','+','*','?','<','>'.\n\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.50809cff-2864-4b85-a14a-14660cad8f58.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.7a6896a1-3f82-4bce-a58b-65e1b803e3b0.prompt=Port\:
a28d1299-7a82-4d1a-94df-d29c81bd8358.95e22414-7e35-4f71-b5f1-7af5c6c05c01.prompt=To\:
a28d1299-7a82-4d1a-94df-d29c81bd8358.9e887d97-b514-4e0b-8bad-e992e6f77f6d.prompt=From\:
a28d1299-7a82-4d1a-94df-d29c81bd8358.a620a196-8ae9-4f47-8fc6-62815fc3023b.description=<pre>\nThis flow executes Powershell scripts on a given host.\n\nInputs\:\nhost - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\nDefault value\: localhost\nURI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session. \nValue format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\nExample\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\nshellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\nExample\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\nusername - The username to use when connecting to the server.\nValue format\: username@domain or domain\\\\username.\npassword - The password to use when connecting to the server.\nauthType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Basic, Credssp, Digest, Kerberos, Negotiate, NegotiateWithImplicitCredential. (case-insensitive)\nDefault value\: Default\nconfigurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\nconnectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\nDefault value\:180000 (3 minutes).\nscriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\nuseSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\nDefault value\: false\nskipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\nDefault value\: true\nskipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\nDefault value\: true\nport - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\nkeepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\nDefault value\: false\nenablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\nDefault value\: false\nExample\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\nrunspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\nmodules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\nExample\: FailoverClusters\nsnapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\nExample\: Microsoft.Exchange.Management.PowerShell.E2010\nscript - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\nExample\:c\:\\PowerShellScripts\\GetHost.ps1\ncmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\nreturnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\nDefault value\: false\ndelimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\ncolDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ",".\nrowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline.\n\nResponses\:\nSuccess - The Powershell script or cmdlet was executed successfully.\nFailure - Something went wrong.\n\nReturns\:\nreturnResult - The result of the script execution formatted as table or string depending on the returnTable input value as described above.\nscript - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host. Please note that the operation adds "Out-String" command to the end of your script if returnTable input  is set to false. \nobjectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\nwarnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\nrunspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.abaf7913-b23a-458c-ab6b-cef0a1a4a2be.description=<pre>Set general information for an Active Directory user.\n\nInput Parameters\:\nhost - domain controller\nOU - the Organizational Unit DN or Common Name DN the user is in (i.e. OU\=EMEAOU)\nuserCommonName - the CN, generally the full name of user (i.e. Bob Smith)\nuserPassword - password for user (must be at least 5 characters long)\nusername - user to connect to AD as\npassword - password to connect to AD as\ndelimiter - delimiter used to split the otherTelephoneNr and otherWebPages inputs\n\nThe folowing inputs are the information that can be set. Inputs with empty value will not alter the already existing information.\nfirstName - user first name to change\ninitials - user initials of the user to change\nlastName - user last name to change\ndisplayName - user display name to change\ndescription - user description to change\noffice - user office description to change\ntelephoneNr - user telephone number to change\notherTelephoneNrs - other telephone numbers\nemail - user email to change\nwebPage - user webpage to change\notherWebPages - other webpages for the user\n\nResponses\:\nsuccess - operation was able to set the user's properties\nfailure - the user's properties could not be set because of invalid property value(s) or because an error occurred\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.b63b1c44-f273-4977-ba73-005dacda3e05.prompt=Port\:
a28d1299-7a82-4d1a-94df-d29c81bd8358.cd5c3ec6-2d02-4656-94d7-89ef37b0e89c.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.dd693e3f-3097-47a1-86ef-5757f87ee7cd.prompt=Host name\:
a28d1299-7a82-4d1a-94df-d29c81bd8358.e9d73216-1810-49e3-82eb-5b08c49b2218.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.f12a0a63-b7f3-40a1-b6a5-bd913f43f9d2.description=<pre>Sets User Organization Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\ntitle - user title\ndepartment\t- name of the department\ncompany - name of the company\nmanagerDN - manager distinguished name (i.e. CN\=John Smith,OU\=EMEAOU,DC\=domain,DC\=com)\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
a28d1299-7a82-4d1a-94df-d29c81bd8358.fc62fe21-8409-4bcb-8bff-1aeb9cb3b5f7.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
d9282803-356b-46e6-915a-c2a13015d865.description=<pre>\nNew-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    AuthType -   Is mandatory\: false.\n    City -   Is mandatory\: false.\n    Country -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Description -   Is mandatory\: false.\n    DisplayName -   Is mandatory\: false.\n    Instance -   Is mandatory\: false.\n    ManagedBy -   Is mandatory\: false.\n    Name -   Is mandatory\: true.\n    OtherAttributes -   Is mandatory\: false.\n    PassThru -   Is mandatory\: false.\n    Path -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    PostalCode -   Is mandatory\: false.\n    ProtectedFromAccidentalDeletion -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n    State -   Is mandatory\: false.\n    StreetAddress -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
d9282803-356b-46e6-915a-c2a13015d865.f1579aa9-130d-439b-8164-a83e67d90327.description=<pre>\nThis flow executes Powershell scripts on a given host.\n\nInputs\:\nhost - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\nDefault value\: localhost\nURI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session. \nValue format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\nExample\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\nshellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\nExample\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\nusername - The username to use when connecting to the server.\nValue format\: username@domain or domain\\\\username.\npassword - The password to use when connecting to the server.\nauthType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Basic, Credssp, Digest, Kerberos, Negotiate, NegotiateWithImplicitCredential. (case-insensitive)\nDefault value\: Default\nconfigurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\nconnectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\nDefault value\:180000 (3 minutes).\nscriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\nuseSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\nDefault value\: false\nskipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\nDefault value\: true\nskipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\nDefault value\: true\nport - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\nkeepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\nDefault value\: false\nenablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\nDefault value\: false\nExample\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\nrunspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\nmodules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\nExample\: FailoverClusters\nsnapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\nExample\: Microsoft.Exchange.Management.PowerShell.E2010\nscript - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\nExample\:c\:\\PowerShellScripts\\GetHost.ps1\ncmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\nreturnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\nDefault value\: false\ndelimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\ncolDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ",".\nrowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline.\n\nResponses\:\nSuccess - The Powershell script or cmdlet was executed successfully.\nFailure - Something went wrong.\n\nReturns\:\nreturnResult - The result of the script execution formatted as table or string depending on the returnTable input value as described above.\nscript - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host. Please note that the operation adds "Out-String" command to the end of your script if returnTable input  is set to false. \nobjectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\nwarnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\nrunspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.07bed19a-7574-43c9-813a-1076881c5f7d.description=<pre>Set general information for an Active Directory user.\n\nInput Parameters\:\nhost - domain controller\nOU - the Organizational Unit DN or Common Name DN the user is in (i.e. OU\=EMEAOU)\nuserCommonName - the CN, generally the full name of user (i.e. Bob Smith)\nuserPassword - password for user (must be at least 5 characters long)\nusername - user to connect to AD as\npassword - password to connect to AD as\ndelimiter - delimiter used to split the otherTelephoneNr and otherWebPages inputs\n\nThe folowing inputs are the information that can be set. Inputs with empty value will not alter the already existing information.\nfirstName - user first name to change\ninitials - user initials of the user to change\nlastName - user last name to change\ndisplayName - user display name to change\ndescription - user description to change\noffice - user office description to change\ntelephoneNr - user telephone number to change\notherTelephoneNrs - other telephone numbers\nemail - user email to change\nwebPage - user webpage to change\notherWebPages - other webpages for the user\n\nResponses\:\nsuccess - operation was able to set the user's properties\nfailure - the user's properties could not be set because of invalid property value(s) or because an error occurred\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.0f2be9bf-16f7-46b4-ae8a-c40e5346f540.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.11bc4ebd-b89c-44db-a5c8-e5d4b2351dab.description=<pre>\nThis flow executes Powershell scripts on a given host.\n\nInputs\:\nhost - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\nDefault value\: localhost\nURI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session. \nValue format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\nExample\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\nshellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\nExample\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\nusername - The username to use when connecting to the server.\nValue format\: username@domain or domain\\\\username.\npassword - The password to use when connecting to the server.\nauthType - Specifies the mechanism that is used to authenticate the user's credentials. \nValid values\: Default, Basic, Credssp, Digest, Kerberos, Negotiate, NegotiateWithImplicitCredential. (case-insensitive)\nDefault value\: Default\nconfigurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\nconnectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\nDefault value\:180000 (3 minutes).\nscriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\nuseSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\nDefault value\: false\nskipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\nDefault value\: true\nskipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\nDefault value\: true\nport - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\nkeepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\nDefault value\: false\nenablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\nDefault value\: false\nExample\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\nrunspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\nmodules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\nExample\: FailoverClusters\nsnapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\nExample\: Microsoft.Exchange.Management.PowerShell.E2010\nscript - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\nExample\:c\:\\PowerShellScripts\\GetHost.ps1\ncmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\nreturnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\nDefault value\: false\ndelimiter - The delimiter used to separate each property name from the property value in the output table.\nDefault value\: "\:".\ncolDelimiter - The delimiter used to separate columns in the output table.\nDefault value\: ",".\nrowDelimiter - The delimiter used to separate rows in the output table.\nDefault value\: newline.\n\nResponses\:\nSuccess - The Powershell script or cmdlet was executed successfully.\nFailure - Something went wrong.\n\nReturns\:\nreturnResult - The result of the script execution formatted as table or string depending on the returnTable input value as described above.\nscript - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host. Please note that the operation adds "Out-String" command to the end of your script if returnTable input  is set to false. \nobjectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\nwarnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\nrunspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.15dc95b6-5648-4ecf-b2ce-114fba03beac.prompt=From\:
e243c3d1-8329-45b8-8580-cfc431d8b942.20b31f22-544b-4fb3-9a6f-508f9fd6bbfb.prompt=To\:
e243c3d1-8329-45b8-8580-cfc431d8b942.254c003f-141d-4cae-9b17-ee5c8ca60400.prompt=Host name\:
e243c3d1-8329-45b8-8580-cfc431d8b942.298a3ec1-1a45-4336-a5b6-d737d374a7f8.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.447ced52-3be2-447d-b0f7-01fee1ea99b5.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.4a2e6a7f-a0d6-4b62-8d01-d38b1b59a0ff.prompt=Port\:
e243c3d1-8329-45b8-8580-cfc431d8b942.57a6dba1-8eb6-4294-9e61-8220f091c490.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.620f0abf-8748-4a85-988a-7b2693e35cf3.description=<pre>\nCreates a new user in Active Directory.\n\nInputs\:\n    host - Domain controller.\n    OU - The OU (Organization Unit) or CN (Common Name) to add the user to.\nExample\: CN\=Users.\n    userFullName - Full name of user.\nExamples\: Bob Smith.\n    userPassword - Password for user. (Should respect the password restrictions imposed by AD)\n    sAMAccountName -  New user sAMAAccount name. This is the user logon name (pre-Windows 2000).\nExamples\: bsmith. \nThe complete user account name will look like this "DOMAINNAME\\bsmith".\n    altuser -  Username used to login on domain controller.\n    altpass - Password for altuser.\n    escapeChars - Add this input and set the value to 'true' if you want the operation to escape the special AD characters.\n\nResponses\:\n    success - Operation created new user in AD.\n    failure - Operation failed to create the user.\n\nResults\:\n    Operation return code.\n\nExtra Results\:\n    userDN - The distinguished name of the newly created user ('userFullName' input).\n\nNotes\:\n1. If the inputs contain special characters make sure you enter these inputs either with no special character escaped and set escapeChars to true, either with all the special characters escaped. The special AD characters are '\#','\=','"','<','>',',','+',';','\\','"''.\n2. If sAMAccountName input contains special characters these will be replaced with the "_" character. The following characters are considered special regarding sAMAccountName\: '"','\\','/','[',']','\:',';','|','\=',',','+','*','?','<','>'.\n\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.62b36128-cea4-44a8-803d-480040591961.prompt=Host name\:
e243c3d1-8329-45b8-8580-cfc431d8b942.6f70cb75-2377-401d-8d9d-182adaaf8907.description=<pre>Sets User Account Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\nlogonName - change the user logon name\nsAMAccountName - user sAMAccount name\nmustChangePassword - must change password option\ncantChangePassword - cannot change password option. Valid inputs are\: true, false\npasswordNeverExpires - password never expires option. Valid inputs are\: true, false\nuseReversibleEncryption - use reversible encryption option. Valid inputs are\: true, false\naccountDisabled - account disabled option. Valid inpute are\: true, false\nsmartcardRequired - smartcard is requred for interactive logon. Valid inpute are\: true, false\nnotDelegated - account is sensitive and cannot be delegated. Valid inpute are\: true, false\nuseDESEncryption - use DES encryption types for this account. Valid inpute are\: true, false\ndoNotRequireKerberos - do not require Kerberos authentication. Valid inpute are\: true, false\naccountExpires - account expiration date. Use 'never' for account never expires\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.7001820a-bc6a-44af-94ab-be6e3e3c0c6f.prompt=From\:
e243c3d1-8329-45b8-8580-cfc431d8b942.712de36c-539c-4621-80f5-7cb3142a9593.description=<pre>Sets User Address Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\nstreet - user street\npOBox - user P.O. box\ncity - city of the user\nstateOrProvince - state or province option\nzipOrPostalCode - zip or postal code\ncountryOrRegion - country or region. The format for this input should be countryName,countryAbbreviation,countryCode. countryName sets the value for the "co" property, countryAbbreviation sets the "c" property using the two-letter country code, countryCode sets the "countryCode" property using the numeric value of the country.\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n\nNote\:\nMake sure that the values supplied to the countryOrRegion input ar valid, as only the format of this input is checked for correctness and not the values themselves. The valid country names, two-letter country codes and three-digit numeric codes are the ones defined by the  ISO 3166 standard.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.713beeaa-565f-48d8-8353-86842c4d8e59.prompt=Port\:
e243c3d1-8329-45b8-8580-cfc431d8b942.7c224e0e-f7d7-4f6b-8e09-41f632741a0f.description=<pre>\nNew-ADOrganizationalUni\n\nInputs\:\n    host - The hostname or ip address of the PowerShell host. This input is mutual exclusive with URI and shellURI.\n Default value\: localhost\n    URI - Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint for the interactive session.\n Value format\: <Transport>\://<ComputerName>\:<Port>/<ApplicationName>\n Example\: http\://exch2010CAS1/Powershell?serializationLevel\=Full\n    shellURI - Gets the Uniform Resource Identifier (URI) of the shell that is launched when the connection is made. This input is mutual exclusive with host.\n Example\: http\://schemas.microsoft.com/powershell/Microsoft.Exchange\n    username - The username to use when connecting to the server.\n Value format\: username@domain or domain\\\\username.\n    password - The password to use when connecting to the server.\n    configurationName - Specifies the session configuration that is used for the new PSSession. If you specify only the configuration name, the following schema URI is prepended\: http\://schemas.microsoft.com/powershell. Use Microsoft.PowerShell32 to force x32 PowerShell version on x64 machines.\n    authType - Specifies the mechanism that is used to authenticate the user's credentials.\n Valid values\: Default, Basic, Negotiate, Credssp, Kerberos, NegotiateWithImplicitCredential. (case-insensitive)\n Default value\: Default\n    connectionTimeout - Determines how long the client computer waits for the remote session connection to be established. When the interval expires, the command to establish the connection fails. Enter a positive value in milliseconds.\n Default value\:180000 (3 minutes).\n    scriptTimeout - Determines how long the client computer waits for the PowerShell script to be executed. When the interval expires, the operation fails. Enter a positive value in milliseconds. An empty value means no time-out; the script execution continues indefinitely.\n    useSSL - If true, the operation uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used. WS-Management encrypts all Windows PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection. Default port for SSL is 5986.\n Default value\: false\n    skipCACheck - Indicates whether, when connecting over HTTPS, the client does not validate that the server certificate is signed by a trusted certificate authority (CA).\n Default value\: true\n    skipCNCheck - Indicates whether the certificate common name (CN) of the server and the hostname of the server are not checked for being the same.\n Default value\: true\n    port - Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985 (the WinRM port for HTTP) and 5986 (the WinRM port for HTTPS).\n    keepSessionAlive - If true, the operation will not close the PowerShell runspace (i.e. the PSSession in case of remote connections ) created during the execution and returns the runspaceID as the result of the operation. Actually the PowerShell runspace is saved in the OO session and can be used in other operations using the runspaceID result of previous operation.\n Default value\: false\n    enablePiping - If true the operation enables piping the way PowerShell does. This input should be used only when keepSessionAlive input is true. First time the piped objects are null and the scope is to save the objects resulted from the PowerShell script execution. Next time the piped objects can be refered in the script as "$_" objects.\n Default value\: false\n Example\: First, run "Get-Service" script with enablePiping\=true and keepSessionAlive\=true, then run the script  "Select-Object -property name,displayname,status|where-object {$_.Name -lt "C"}" with enablePiping\=true keepSessionAlive\=true. Observe the use of "$_".\n    runspaceID - If not empty, the operation will search the OO session for keys which equal the runspaceID. If the operation finds the runspace specified by the runspaceID it tries to use it and does not create another PowerShell runspace with provided inputs. If the runspace exists but is broken or unavailable the operation uses its authentication parameters and tries to reconnect and recreate the PowerShell runspace. Please note that the operation will use the connection parameters of the runspace identified by runspaceID, not the values provided as user inputs. The operation will take into consideration the connection inputs (i.e. host, username, password, authType, useSSL, etc.) provided by user only if the runspaceID does not exist in the OO session.\n    modules - A list of PowerShell modules to load after the PowerShell connection is established. Each value from the list specifies the name of the module to import. Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file. File paths are optional. Wildcards are not permitted. Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they are not imported, and you might be missing important members of the module. The list of modules should be separated by comma "," delimiter.\n Example\: FailoverClusters\n    snapins - A list of PowerShell snapins to load after the PowerShell connection is established. Each value from the list specifies the name of a registered snapin (i.e. the Name, not the AssemblyName or ModuleName).\n Example\: Microsoft.Exchange.Management.PowerShell.E2010\n    script - The script to execute on the PowerShell host. If you want to execute a script from file just provide the file path.\n Example\:c\:\\PowerShellScripts\\GetHost.ps1\n    cmdlet - The name of the PowerShell cmdlet to invoke. If the cmdlet has additional parameters, please provide them as inputs to the operation. If the parameter has the same name as one of the operation's inputs just prefix it with "_". This input is intended to be used together with the PowerShell wizard so please use the script input whenever it's possible.\n    returnTable - If true, the operation will return a table containing a row for each PSObject that the script emits. The table's columns represent the properties of these PSObjects, in the propertyName<delimiter>propertyValue format. If false the operation returns a string representation of the result similar to the output from the PowerShell console.\n Default value\: true\n    delimiter - The delimiter used to separate each property name from the property value in the output table.\n Default value\: "\:".\n    colDelimiter - The delimiter used to separate columns in the output table.\n Default value\: ",".\n    rowDelimiter - The delimiter used to separate rows in the output table.\n Default value\: newline.\n    AuthType -   Is mandatory\: false.\n    City -   Is mandatory\: false.\n    Country -   Is mandatory\: false.\n    Credential -   Is mandatory\: false.\n    Description -   Is mandatory\: false.\n    DisplayName -   Is mandatory\: false.\n    Instance -   Is mandatory\: false.\n    ManagedBy -   Is mandatory\: false.\n    Name -   Is mandatory\: true.\n    OtherAttributes -   Is mandatory\: false.\n    PassThru -   Is mandatory\: false.\n    Path -   Is mandatory\: false.\n    PipelineVariable -   Is mandatory\: false.\n    PostalCode -   Is mandatory\: false.\n    ProtectedFromAccidentalDeletion -   Is mandatory\: false.\n    Server -   Is mandatory\: false.\n    State -   Is mandatory\: false.\n    StreetAddress -   Is mandatory\: false.\n\nResults\:\n    returnResult - This is the primary output. Represents the result of the script execution formatted as table or string depending on the returnTable input value as described above.\n    script - The actual PowerShell script that was run. This result might be useful when piping is enabled or you want to know exactly the script that was sent to be run on the PowerShell host.\n    objectsCount - The number of the PowerShell objects resulted from script execution (e.g. Get-Service will return the number of services found on the target host). This input is relevant only when returnTable is set to true. Otherwise, the value of this result will always be one, because the script returns a string message.\n    warnings - A list of warnings that the cmdlets emit. If the cmdlets were executed without warnings, then this result will be an empty string.\n    runspaceID - The runspace ID of the PowerShell runspace created during the execution of the operation.\n\nResponses\:\n    success - The Powershell script or cmdlet was executed successfully.\n    failure - Something went wrong.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.88b08c0c-1762-41e5-a040-6edded6f0bc5.prompt=To\:
e243c3d1-8329-45b8-8580-cfc431d8b942.9c816876-f8db-405a-8567-ada8095b8e05.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
e243c3d1-8329-45b8-8580-cfc431d8b942.ab091db6-ed83-47f5-9ef8-df5523a27fcc.prompt=Port\:
e243c3d1-8329-45b8-8580-cfc431d8b942.b4c8e6c5-9d78-4283-8a67-e56882b6a6d6.prompt=To\:
e243c3d1-8329-45b8-8580-cfc431d8b942.ce6a78f5-a86c-4b8e-b49e-b18b754cb606.prompt=From\:
e243c3d1-8329-45b8-8580-cfc431d8b942.d1ea0976-5826-4ffb-a781-0e50fe667fc9.description=<pre>Sets User Organization Information\n\nInputs\:\nhost - the domain controller to connect to\nusername - the windows username to connect to active directory as\npassword - password for username\nOU - the organizational unit that the user that should be disabled is in (i.e OU\=EMEAOU)\nuserCommonName - the CN of the user (i.e. John Smith)\ntitle - user title\ndepartment\t- name of the department\ncompany - name of the company\nmanagerDN - manager distinguished name (i.e. CN\=John Smith,OU\=EMEAOU,DC\=domain,DC\=com)\n\nResponses\:\nsuccess - the operation finished with success\nfailure - something went wrong during the execution\n\nResults\:\nThe operation return code.\n\nExtra Results\:\nreturnResult - the raw result of the operation\nsessionId - the session ID of the connection to the host\nexception - if an error occurred, the message of this error\n</pre>
eb46a7ed-210b-46f0-9222-b0488a08bbfe.35cbdf3f-6394-4bdb-a768-826ae267e4f4.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
eb46a7ed-210b-46f0-9222-b0488a08bbfe.4c86abc2-a7b1-4528-942a-6841b6131c1b.prompt=Enter a value for sAMAccountName
eb46a7ed-210b-46f0-9222-b0488a08bbfe.cb816532-9827-42e1-a6aa-c5d48f436079.description=<pre>\nResets a users password in Active Directory.\n\nInputs\:\nhost - hostname or IP Address of AD Server\nsAMAccountName - the account to reset\nuserPassword - the new password\nusername - account with admin privlidges or reset password priv in domain\npassword - password to admin account\n\nResponeses\:\nsuccess - password has been reset\nfailure - failed to reset password\n</pre>\n
eb46a7ed-210b-46f0-9222-b0488a08bbfe.d824c300-e914-41a8-b5cb-fde189edf1bb.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
eb46a7ed-210b-46f0-9222-b0488a08bbfe.dea5e8b8-250a-4f27-ae49-37a8cfce2b2f.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
eb46a7ed-210b-46f0-9222-b0488a08bbfe.dfabc3ef-29a3-4a91-b926-3285611c8606.description=<pre>\nGenera una contrase\u00F1a aleatoria.\n\nEntradas\:\npasswordLength - la longitud requerida de la contrase\u00F1a\nnumberOfNonAlphanumericCharacters - el n\u00FAmero m\u00EDnimo de n\u00FAmeros no alfab\u00E9ticos\n\nRespuestas\:\nsuccess - contrase\u00F1a generada\nfailure - no se pudo generar la contrase\u00F1a\n\nResultados adicionales\:\npassword - la contrase\u00F1a generada\n\nNOTA\:\nSi passwordLength o numberOfNonAlphanumericCharacters son inferiores a 0 o si numberOfNonAlphanumericCharacters es superior a passwordLength, la operaci\u00F3n ser\u00E1 correcta y devolver\u00E1 una contrase\u00F1a vac\u00EDa.\n</pre>\n
eb46a7ed-210b-46f0-9222-b0488a08bbfe.f42e873f-f22e-4e11-883d-05aba7bfcc55.description=<pre>Searches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - name or IP address of LDAP server to query. Can also be used in the form " host\:port"\nDN - base DN for search\nfilter - search filter (see Note section)\npropertyName - name of the property to return (ex. distinguishedName)\nusername - name of user to connect to LDAP as\npassword - password of user\nport - specify the port in case it is not the default one, or it is not specified in the host path\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\n\nResponses\:\nobject(s) retrieved - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nno objects found - no objects were found\nfailure - an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local\n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
eb46a7ed-210b-46f0-9222-b0488a08bbfe.fa7cdc1e-4bef-40ff-9e36-85254fffba0d.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.005fdce3-aa13-4050-9a32-9bd3a58bad6b.prompt=To\:
fec02cad-7b4c-44ed-b48a-3cc475ecb636.1a1ab900-6ad3-4fbd-af18-72522a7232f4.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.26211a85-3866-4380-9860-49f12db28967.description=<pre>\nResets a users password in Active Directory.\n\nInputs\:\nhost - hostname or IP Address of AD Server\nsAMAccountName - the account to reset\nuserPassword - the new password\nusername - account with admin privlidges or reset password priv in domain\npassword - password to admin account\n\nResponeses\:\nsuccess - password has been reset\nfailure - failed to reset password\n</pre>\n
fec02cad-7b4c-44ed-b48a-3cc475ecb636.2c9165b1-4c4d-435a-bf1d-881f3f4c166c.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.4c60943a-b5af-403a-89c5-d004583f83c9.description=<pre>\nRealiza una operaci\u00F3n matem\u00E1tica en dos n\u00FAmeros\n\nEntradas\:\noperator - La operaci\u00F3n que se realizar\u00E1 (+, -, *, /, <, >, <\=, >\=, \=\=, \!\=).\nvalue1 - El primer valor.\nvalue2 - El segundo valor.\n\nDevuelve\:\nEl resultado de la operaci\u00F3n, para valores boleanos esto es true o false.\n\nRespuestas\:\nsuccess - La operaci\u00F3n finaliz\u00F3 correctamente. Si es una operaci\u00F3n booleana, se eval\u00FAa a "true".\nfailure - Algo sali\u00F3 mal o la operaci\u00F3n booleana devolvi\u00F3 false.\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.4ec9fd4c-4f33-4129-8ccf-fa08a834de98.description=<pre>\nSearches for specific properties in LDAP. Returns a list of the values of the given properties for the first object that passes the filter (given in the corresponding input). The rest of the property values (for the other objects) are stored in a collection that is accessible via the LDAP Search Next Result operation.\n\nInput Parameters\:\nhost - Name or IP address of LDAP server to query. Can also be used in the form " host\:port".\nDN - Base DN for search.\nfilter - Search filter (see Note section).\npropertyNames - Names of properties to return (ex. distinguishedName,telephoneNumber).\nusername - Name of user to connect to LDAP as.\npassword - Password of user.\nport - Specify the port in case it is not the default one, or it is not specified in the host path.\ndelimiter - A delimiter to separate the property names in the input and the property values in the result. If no value is assigned the delimiter is set to "," by default.\nuseADAuth - add this input and set to false if using a non AD LDAP server. If false, uses ServerBind instead of secure NTLM based bind.\nsearchScope - the scope for doing the search. Permitted values\: Base -limits the search to the base object-, OneLevel -searches the immediate child objects of the base object, excluding the base object- or Subtree -searches the whole subtree, including the base object and all its child objects-. If the scope of a directory search is not specified, a Subtree type of search is performed.\nmaxResults - The maximum number of objects that the server returns in a search.\n\nResponses\:\nsuccess - was able to retrieve objects and property values from LDAP. First value returned as returnResult result\nfailure - either no objects were found, an invalid or duplicate property name was provided or an error occured. See returnResult for more information\n\nNote\:\nThe filter input can be a simple filter, or a composed one. The filter can be composed by the rules described in "RFC2254 - The String Representation of LDAP Search Filters" which can be found at http\://www.faqs.org/rfcs/rfc2254.html.  \n\nExample of valid filters\:\nmember\=CN\=User1,CN\=Users,DC\=mydomain,DC\=local \n(|(numsubordinates\=1)(entryid\=15))\n(&(mobile\=*)(name\=abcd))\n(&(objectClass\=Person)(|(sn\=Jensen)(cn\=Babs J*)))\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.66db736f-a568-4ad2-ade2-47624ffab09d.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.88d7a8f2-4d41-4b04-95f4-210eac863881.description=<pre>This operation is used to send a smtp email.\n \nInputs\:\n    hostname - The hostname or ip address of the smtp server.\n    port - The port smtp service is listening.\n    from - From email address.\n    to - A delimiter separated list of email address(es) or recipients.\n    cc - A delimiter separated list of email address(es) or recipients, to be placed in the CC.\n    bcc - A delimiter separated list of email address(es) or recipients, to be placed in the BCC.\n    subject - The email subject. If a subject spans on multiple lines, it is formatted to a single one.\n    body - The body of the email.\n    htmlEmail - The value should be true if the email is in rich text/html format. The value should be false if the email is in plain text format.\nValid values\: true, false. \nDefault value\: true. \n    readReceipt - The value should be true if read receipt is required, else false. \nValid values\: true, false. \nDefault value\: false. \n    attachments - A delimiter separated list of files to attach (must be full path).\n    headers - This input contains extra headers you want to be added in the mail. The input has a 'Map' format. Header names are separated from header values through a column delimiter and headers will be separated between them by a row delimiter.\nExample\:\n    Sensitivity\:Company-Confidential\n    message-type\:Multiple Part\n    Sensitivity\:Personal\nIn the above example, the columnDelimiter is "\:" and the rowDelimiter is the new line. You can define multiple values for the same header like in the example above. The delimiters can have multiple characters, but be careful that the rowDelimiter is not a substring of the columnDelimiter.\n    rowDelimiter - The delimiter that separates headers in the 'headers' input.\nDefault value\: "\:"\nExamples\: '|', '\='\n    columnDelimiter - The delimiter that separates the header name from header value on the same row.\nDefault value\: "\\n"\t\nExamples\: ';', '\#'\n    username - If SMTP authentication is needed, the username to send.\n    password - If SMTP authentication is needed, the password to use.\n    characterSet - The character set encoding for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: UTF-8, UTF-16, UTF-32, EUC-JP, ISO-2022-JP, Shift_JIS, Windows-31J.\nDefault value\: UTF-8.\n    contentTransferEncoding - The content transfer encoding scheme (such as 7bit, 8bit, base64, quoted-printable etc) for the entire email which includes subject, body, attached file name and the attached file. \nValid values\: quoted-printable, base64, 7bit, 8bit, binary, x-token.\nDefault value\: quoted-printable (or Q Encoding).\n    delimiter - A delimiter to separate the email recipients and the attachments.\nDefault value\: ','\n    encryptionKeystore - The path to the pks12 formatted keystore used to encrypt the mail.\n    encryptionKeyAlias - The alias of a RSA key pair from the encryptionKeystore. The public key from the pair will be used to encrypt the mail. The key pair must not have password. The recommended key size is 2048 bit or higher.\n    encryptionKeystorePassword - The password for the encryptionKeystore.\n    encryptionAlgorithm - The encryption algorithm applied on the key from the keystore in order to encypt email parts. \nDefault value\: AES256_CBC.\nValid values\: DES_EDE3_CBC, RC2_CBC, IDEA_CBC, CAST5_CBC, AES128_CBC, AES192_CBC, AES256_CBC, CAMELLIA128_CBC, CAMELLIA192_CBC, CAMELLIA256_CBC, SEED_CBC, DES_EDE3_WRAP, AES128_WRAP, AES256_WRAP, CAMELLIA128_WRAP, CAMELLIA192_WRAP, CAMELLIA256_WRAP, SEED_WRAP.\n    enableTLS - Enables starttls. If the server supports TLS or SSL, the communications will be secured by TLS or SSL. If it doesn't support TLS or SSL the communication will be unsecure.\nValid values\: true, false. \nDefault value\: false.\n    timeout - The timeout in seconds for sending the mail message.\n\nResponses\:\n    success - Successfully sent the email.\n    failure - Failed to send the email.\n\nNote\:\n1. For special characters (East Asian, right-to-left languages, etc.) you must install the support files on your local machine.\n2. For doing this on Windows go to Control Panel -> Regional and Language Options -> Language and check the options at Supplemental language support.\n3. You can use KeyStore Explorer to obtain RSA Keystore with keyPairs for encryption/decryption.\n    3.1 If you get "llegal key size exception" you don't have JCE Unlimited Strength installed.\n</pre>
fec02cad-7b4c-44ed-b48a-3cc475ecb636.8fd7c484-525e-49be-a4c7-c4d6872edddb.description=<pre>\nAuthenticates a user against Active Directory.\n\nInputs\:\nhost - The hostname or IP address of the AD server.\nusername - The user's windows username (Examples\: username@domain.com or domain\\username).\npassword - The user's password.\n\nResponses\:\nsuccess - User authenticated against AD.\nfailure - User could not be authenticated.\n</pre>\n
fec02cad-7b4c-44ed-b48a-3cc475ecb636.fd92ad23-bf13-4e8d-8176-f3d0aa3ceca6.prompt=From\:
